name: Build Pull Request Test Image

on:
  pull_request:
    branches:
      - main
    paths:
      - docker/**

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Build and Push Docker
        uses: ./.github/actions/docker-build
        with:
          dockerfile-tag: ${{ github.event.pull_request.number }}
          docker-tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ciroh-ngen-image-dev:${{ github.event.pull_request.number }}
            ${{ secrets.DOCKERHUB_USERNAME }}/ngiab-dev:${{ github.event.pull_request.number }}
          slack-title: Pull request built ${{ github.event.pull_request.title }}
          dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
          buildcloud-endpoint: ${{ secrets.BUILDCLOUD_ENDPOINT }}
          slack-webhook-url: ${{ secrets.SLACK_APP_WEBHOOK_URL }}
  test-amd64:
    needs: build-and-push
    runs-on: ubuntu-latest  # Native AMD64
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        
      - name: Test AMD64 Docker Image
        uses: ./.github/actions/docker-test
        with:
          image-name: "ngiab-dev"
          tag-name: ${{ github.event.pull_request.number }}
          test-data-url-1: "https://ciroh-ua-ngen-data.s3.us-east-2.amazonaws.com/AWI-010-lstm/AWI-10154200-lstm.tar.gz"
          test-data-url-2: "https://ciroh-ua-ngen-data.s3.us-east-2.amazonaws.com/AWI-007/AWI_16_2863657_007.tar.gz"
          dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
          current-platform: "linux/amd64"

  test-arm64:
    needs: build-and-push
    runs-on: macos-14  # Native ARM64 runner
    steps:
      # Install Docker first since macOS doesn't have it by default
      - name: Install and Start Docker
        run: |
          # Install Docker Desktop (includes daemon)
          brew install --cask docker
          
          # Add Docker to PATH (sometimes needed)
          echo "/Applications/Docker.app/Contents/Resources/bin" >> $GITHUB_PATH
          
          # Start Docker Desktop
          open /Applications/Docker.app
          
          # Wait for Docker daemon
          echo "Waiting for Docker daemon..."
          for i in {1..60}; do
            if docker ps >/dev/null 2>&1; then
              echo "Docker is ready!"
              break
            fi
            echo "Attempt $i/60: Docker not ready yet..."
            sleep 5
          done
          
          # Verify Docker is working
          docker --version
          docker system info

      - name: Checkout
        uses: actions/checkout@v4.2.2
        
      - name: Test ARM64 Docker Image
        uses: ./.github/actions/docker-test
        with:
          image-name: "ngiab-dev"
          tag-name: ${{ github.event.pull_request.number }}
          test-data-url-1: "https://ciroh-ua-ngen-data.s3.us-east-2.amazonaws.com/AWI-010-lstm/AWI-10154200-lstm.tar.gz"
          test-data-url-2: "https://ciroh-ua-ngen-data.s3.us-east-2.amazonaws.com/AWI-007/AWI_16_2863657_007.tar.gz"
          dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
          current-platform: "linux/arm64"
  
  # Optional: Job to check if both tests passed
  test-summary:
    needs: [test-amd64, test-arm64]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Test Results Summary
        shell: bash
        run: |
          echo "AMD64 Test: ${{ needs.test-amd64.result }}"
          echo "ARM64 Test: ${{ needs.test-arm64.result }}"
          
          if [[ "${{ needs.test-amd64.result }}" == "success" && "${{ needs.test-arm64.result }}" == "success" ]]; then
            echo "✅ All platform tests passed!"
            echo "PR #${{ github.event.pull_request.number }} ready for review"
          else
            echo "❌ Some platform tests failed"
            echo "PR #${{ github.event.pull_request.number }} needs attention"
            exit 1
          fi
